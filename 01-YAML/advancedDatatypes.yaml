#sequence

student: !!seq
 - marks
 - names
 - roll_no

student: [marks, names, roll_no ]

# sparse sequence

sparse seq:
 - how
 - what
 -
 - Null

# nested sequence

- 
 - mango
 - apple
 - orange
 - banana
-
 - yellow
 - red
 - orange
 - yellow

# key: value pairs are called maps

!!map

## nested maps: map within a map
name: Driptanil
role: 
 age: 18
 job: studentfs

name: Driptanil
role: {age: 18, job: student};

# pairs: keys may have duplicate values

pair example: !!pairs
 - job: student
 - job: learner

pair example: !!pairs [job: student, job: learner]

# !!set will allow you to have unique values

name: !!set
 ? driptanil
 ? kunal

# dictionary !!omap
People: !!omap
 - driptanil
    name: driptanil
    age: 18
    role: student

# reusing some properties using anchors

likings: &likes
 fruit: Oranges
 dislikes: Pineapple


person:
 name: Driptanil
 <<: *likes
 dislikes: Apple

